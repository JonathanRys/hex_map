@charset "utf-8";

body {
  background: #282828;
  color: #282828;
  font-family: Arial, Helvetica, sans-serif;
  margin: 20px 5%;
  padding-top: 40px;
  overflow: scroll;
  touch-action: pax-x pan-y;
}
.grid {
  touch-action: manipulation;
}
.hexagon {
  float: left;
  background-position: center;
  background-size: contain;
  margin-right: -26px;
  margin-bottom: -50px;
}
.hexagon.fill {
  display: inline-block;
  transform: scale(0.45);
  -webkit-transform: scale(0.45);
  -moz-transform: scale(0.45);
  -o-transform: scale(0.45);
  -ms-transform: scale(0.45);
  background-repeat: no-repeat;
  max-height: 120px;
  margin: -25px -15px;
  align-self: flex-start;
}
.hexagon .left {
  float: left;
  width: 0;
  border-right: 30px solid #00ad2f;
  border-top: 52px solid transparent;
  border-bottom: 52px solid transparent;
  opacity: 0;
}
.hexagon .middle {
  float: left;
  width: 60px;
  height: 104px;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  color: #282828;
  font-family: Arial, Helvetica, sans-serif;
  font-size: larger;
  font-weight: 700;
}
.hexagon .right {
  float: left;
  width: 0;
  border-left: 30px solid #00ad2f;
  border-top: 52px solid transparent;
  border-bottom: 52px solid transparent;
  opacity: 0;
}
.hexagon-row {
  clear: left;
}
.hexagon.even {
  margin-top: 53px;
}
.header {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-bottom: 20px;
  position: fixed;
  top: 10px;
  width: 90%;
  background-color: rgba(22,22,22,0.7);
  border-radius: 8px;
}
.controls {
  align-items: center;
  color: white;
  display: flex;
  flex-wrap: wrap;
}
.controls label {
  margin: 5px 15px;
}
.controls input,
.controls select {
  border-radius: 5px;
  max-width: 105px;
  padding: 3px 5px;
}
.controls button {
  background: linear-gradient(beige, burlywood);
  border: none;
  border-radius: 30px;
  box-shadow: 1px  1px 4px gray,
              1px -1px 4px gray,
             -1px  1px 4px gray,
             -1px -1px 4px gray;
  cursor: pointer;
  font-family: Roboto, Arial, Helvetica, sans-serif;
  font-weight: 700;
  height: 30px;
  margin: 10px 15px;
  padding: 5px 15px;
  text-shadow: 1px  1px 3px rgba(51, 51, 51, .1),
               1px -1px 3px rgba(51, 51, 51, .1),
              -1px  1px 3px rgba(51, 51, 51, .1),
              -1px -1px 3px rgba(51, 51, 51, .1);
}
.stats {
  border: 1px solid #282828;
  border-radius: 8px;
  background: white;
  height: max-content;
  margin:  10px;
  padding: 8px 15px;
}
.dimensions,
.stats,
.theme {
  display: flex;
  flex-direction: column;
  width: 100%;
}
.collapsed .dimensions,
.collapsed .theme {
  display:  none;
}
.collapsed .hexagon.fill {
  position: absolute;
  right: 25px;
  top: 20px;
}
.collapsed .menu-icon {
  transform: rotate(180deg);
}
.menu-icon {
  background-image: url(../img/menu_icon.png);
  background-position: center;
  background-size: contain;
  background-origin: border-box;
  background-repeat: no-repeat;
  position: absolute;
  bottom: 15px;
  right: 15px;
  height: 25px;
  width: 25px;
}
/* Only use hover effects with a mouse so they aren't "sticky" on mobile */
@media(hover: hover) and (pointer: fine) {
  .hexagon:hover .middle {
    text-shadow: 1px  1px 4px rgba(255, 255, 255, .4),
                 1px -1px 4px rgba(255, 255, 255, .4),
                -1px  1px 4px rgba(255, 255, 255, .4),
                -1px -1px 4px rgba(255, 255, 255, .4);
  }
  .controls button:hover {
    background: linear-gradient(burlywood, beige);
  }
}

@media (min-width: 1200px) {
  body {
    margin: 20px;
  }
  .dimensions,
  .stats,
  .theme {
    display: block;
    width: auto;
  }
  .controls label {
    margin: 0 3px 0 15px;
  }
  .control button {
    margin: auto;
  }
  .hexagon.fill {
    margin: -25px 0;
    align-self: center;
  }
  .stats {
    align-self: center;
    margin: 0px;
    margin-right: 39px;
  }
  .header {
    top: 0px;
    width: 100%;
  }
  .menu-icon {
    display:  none;
  }
  .collapsed .dimensions,
  .collapsed .theme {
    display:  block;
  }
  .collapsed .hexagon.fill {
    position: relative;
    top: 0;
    right: unset;
  }
}
